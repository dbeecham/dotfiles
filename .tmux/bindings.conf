# Unbind all keys
unbind-key -a

# Ctrl is "C-" or "^", alt (meta) is "M-", shift is "S-".
# Special key names: Up, Down, Left, Right, BSpace, BTab, DC (delete), End,
# Enter, Escape, F1-F20, Home, IC (insert), NPage/PageDown/PgDn,
# PPage/PageUp/PgUp, Space and Tab.
# For " and ', quotations marks are necessary, e.g:
# bind-key '"' split-window
# bind-key "'" new-window
# if -n is specified, command is bound to key alone, without prefix.

# Change prefix to ctrl-a
set-option -g prefix C-b


# home, end
bind -n End send-key C-e
bind -n Home send-key C-a

# turns on vi-mode in copy and choice modes
#mode-keys vi

# turns on vi mode for status line; like the command prompt.
#status-keys vi

# Ctrl is "C-" or "^", alt (meta) is "M-", shift is "S-".
# Special key names: Up, Down, Left, Right, BSpace, BTab, DC (delete), End,
# Enter, Escape, F1-F20, Home, IC (insert), NPage/PageDown/PgDn,
# PPage/PageUp/PgUp, Space and Tab.
# For " and ', quotations marks are necessary, e.g:
# bind-key '"' split-window
# bind-key "'" new-window
# if -n is specified, command is bound to key alone, without prefix.

# C-b C-b -> last window
bind-key C-b last-window

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Smart pane switching with awareness of vim splits
is_vim='~/bin/isvim "#{pane_pid}"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Mouse binds
bind -n MouseDown1Pane select-pane -t= \; send-keys -M
bind -n MouseUp1Pane select-pane -t= \; send-keys -M

bind -n MouseDrag1Border resize-pane -t= -M
bind -n MouseDrag3Pane resize-pane -t= -M
bind -n MouseDown1Status select-window -t=


# select-pane selects panes. -DLRU is down, left, right and up. -l is last.
#bind -n A-l select-pane -L
#bind -n A-k select-pane -U
#bind -n A-j select-pane -D
#bind -n A-h select-pane -R

#bind -n A-l run-shell "SIZE=$(tmux showw main-pane-width | cut -d ' ' -f 2); tmux setw main-pane-width $((SIZE+3)) >> /dev/null; tmux resize-pane -R -t 0 3"
#bind -n A-h run-shell "SIZE=$(tmux showw main-pane-width | cut -d ' ' -f 2); tmux setw main-pane-width $((SIZE-3)) >> /dev/null; tmux resize-pane -L -t 0 3"

#bind -n A-j run-shell "MAX=#{window_panes}; CURRENT=#{pane_index}; tmux select-pane -t $(((CURRENT+1)%(MAX)))"
#bind -n A-k run-shell "MAX=#{window_panes}; CURRENT=#{pane_index}; tmux select-pane -t $(((CURRENT+MAX-1)%(MAX)))"

# Splitting window
bind -n M-v split-window -h
bind -n M-g split-window -v
bind v split-window -h
bind g split-window -v

# tile windows
bind -n M-t select-layout main-vertical

# swap a'la dwm
#bind -n C-Enter swap-pane -t 0 \; select-pane -t 0

bind -n C-q kill-pane \; select-layout main-vertical

# new terminal a'la dwm
bind -n M-Space split-window \; select-layout main-vertical

# rename window
bind '"' command-prompt -I "#{window_name}" "rename-window '%%'"

# detach
bind d detach-client

bind -n M-p resize-pane -R 20
bind -n M-u resize-pane -L 20
bind -n M-f resize-pane -Z

bind -n M-1 run-shell "tmux select-window -t #S:1 >> /dev/null; if test \$? = 1; then tmux new-window -t 1; fi"
bind -n M-2 run-shell "tmux select-window -t #S:2 >> /dev/null; if test \$? = 1; then tmux new-window -t 2; fi"
bind -n M-3 run-shell "tmux select-window -t #S:3 >> /dev/null; if test \$? = 1; then tmux new-window -t 3; fi"
bind -n M-4 run-shell "tmux select-window -t #S:4 >> /dev/null; if test \$? = 1; then tmux new-window -t 4; fi"
bind -n M-5 run-shell "tmux select-window -t #S:5 >> /dev/null; if test \$? = 1; then tmux new-window -t 5; fi"
bind -n M-6 run-shell "tmux select-window -t #S:6 >> /dev/null; if test \$? = 1; then tmux new-window -t 6; fi"
bind -n M-7 run-shell "tmux select-window -t #S:7 >> /dev/null; if test \$? = 1; then tmux new-window -t 7; fi"
bind -n M-8 run-shell "tmux select-window -t #S:8 >> /dev/null; if test \$? = 1; then tmux new-window -t 8; fi"
bind -n M-9 run-shell "tmux select-window -t #S:9 >> /dev/null; if test \$? = 1; then tmux new-window -t 9; fi"

bind h swap-pane -d -t {left}
bind l swap-pane -d -t {right}
bind j swap-pane -d -t {down}
bind k swap-pane -d -t {up}

bind ":" command-prompt
